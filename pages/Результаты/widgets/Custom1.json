{
    "needsErrorInfo": false,
    "boxShadow": "{{appsmith.theme.boxShadow.appBoxShadow}}",
    "mobileBottomRow": 319,
    "borderColor": "#E0DEDE",
    "widgetName": "Custom1",
    "srcDoc": {
        "css": "/* Google fonts - Open Sans */\n@import url(https://fonts.googleapis.com/css?family=Nunito+Sans:400,700);\n.app {\n  height: calc(var(--appsmith-ui-height) * 1px);\n  width: calc(var(--appsmith-ui-width) * 1px);\n  justify-content: center;\n  border-radius: var(--appsmith-theme-borderRadius);\n  box-shadow: var(--appsmith-theme-boxShadow);\n}\n\ndiv {\n  color: rgba(255, 255, 255, 0.9);\n}\n\nbody {\n  background: #18181b;\n  font-family: \"Nunito Sans\", sans-serif;\n}\n\ntable {\n  border-collapse: collapse;\n  font-weight: bold;\n}\n\ntable, th, td {\n  border: 0.5px solid black;\n}\n\nth {\n  background-color: #726f69;\n  height: 35px;\n  font-size: 12px;\n  line-height: 1.2;\n}\n\ntd {\n  background: #3a3936;\n  font-size: 11px;\n  height: 25px;\n  line-height: 1.2;\n}\n\ntd:not(.place-cellData, .is_active-cellData) {\n  padding-left: 5px;\n}\n\na {\n  color: rgba(255, 255, 255, 0.9);\n}\n\na:hover {\n  color: rgba(209, 212, 199, 0.9);\n}\n\n.tableTitle {\n  text-align: center;\n  font-size: 12px;\n  font-weight: bold;\n  padding-top: 5px;\n  padding-bottom: 10px;\n}\n\n.winning-strick {\n  float: left;\n  padding-right: 30px;\n}\n\n.th-nickname {\n  min-width: 50px;\n}\n\n.th-contest {\n  width: 140px;\n}\n\n.biggest-odds {\n  width: 220px;\n}\n\n.place-cellData, .is_active-cellData {\n  min-width: 15px;\n  text-align: center;\n}\n\n.five-contests-points {\n  max-width: 40px;\n}\n\n.container {\n  display: flex;\n}\n\n.winning-streak-table {\n  width: 60%;\n}\n\n.biggest-odd-table {\n  width: 38%;\n  margin-left: auto;\n}\n\n.strick_avg_odds {\n  max-width: 40px;\n}",
        "js": "import React, { useState } from 'https://cdn.jsdelivr.net/npm/react@18.2.0/+esm';\nimport reactDom from 'https://cdn.jsdelivr.net/npm/react-dom@18.2.0/+esm';\nclass TableBuilder extends React.Component {\n  renderTableHeaders(headers, data) {\n    // Do not render headers if table has no data\n    if (!data || !Array.isArray(data) || data.length === 0) {\n      return null;\n    }\n    return headers.map((headerRow, rowIndex) => /*#__PURE__*/React.createElement(\"tr\", {\n      key: rowIndex\n    }, headerRow.map((headerItem, colIndex) => {\n      const {\n        header,\n        accessor,\n        rowspan = 1,\n        colspan = 1\n      } = headerItem;\n      if (colspan > 1) {\n        return /*#__PURE__*/React.createElement(\"th\", {\n          key: colIndex,\n          colSpan: colspan,\n          class: accessor\n        }, header);\n      } else {\n        return /*#__PURE__*/React.createElement(\"th\", {\n          key: colIndex,\n          rowSpan: rowspan,\n          class: accessor\n        }, header);\n      }\n    })));\n  }\n  renderTableRows(data) {\n    // Do not render rows if table has no data\n    if (!data || !Array.isArray(data) || data.length === 0) {\n      return null;\n    }\n\n    // Saving field names to use them as class names for table fields\n    const keys = Object.keys(data[0]);\n    const classNames = keys.map(key => key + \"-cellData\");\n    return data.map((row, index) => /*#__PURE__*/React.createElement(\"tr\", {\n      key: index\n    }, Object.values(row).map((cell, cellIndex) => /*#__PURE__*/React.createElement(\"td\", {\n      key: cellIndex,\n      class: classNames[cellIndex],\n      dangerouslySetInnerHTML: {\n        __html: cell\n      }\n    }))));\n  }\n  render() {\n    const {\n      data\n    } = this.props;\n    const {\n      headers\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"table\", {\n      style: {\n        width: '100%'\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", null, this.renderTableHeaders(headers, data)), /*#__PURE__*/React.createElement(\"tbody\", null, this.renderTableRows(data)));\n  }\n}\nexport default TableBuilder;\nfunction App() {\n  const [crGeneral, setCrGeneral] = useState(appsmith.model.crGeneral);\n  const [crWinningStreak, setCrWinningStreak] = useState(appsmith.model.crWinningStreak);\n  const [crBiggestOdd, setCrBiggestOdd] = useState(appsmith.model.crBiggestOdd);\n  const [crGeneralMon1, setCrGeneralMon1] = useState(appsmith.model.crGeneralMon1);\n  const [crGeneralMon2, setCrGeneralMon2] = useState(appsmith.model.crGeneralMon2);\n  const [crAwards, setCrAwards] = useState(appsmith.model.crGeneralMon2);\n  const [crFinancesTotal, setCrFinancesTotal] = useState(appsmith.model.crFinancesTotal);\n  appsmith.onModelChange(() => {\n    if (crGeneral !== appsmith.model.crGeneral) {\n      setCrGeneral(appsmith.model.crGeneral);\n    }\n    if (crWinningStreak !== appsmith.model.crWinningStreak) {\n      setCrWinningStreak(appsmith.model.crWinningStreak);\n    }\n    if (crBiggestOdd !== appsmith.model.crBiggestOdd) {\n      setCrBiggestOdd(appsmith.model.crBiggestOdd);\n    }\n    if (crGeneralMon1 !== appsmith.model.crGeneralMon1) {\n      setCrGeneralMon1(appsmith.model.crGeneralMon1);\n    }\n    if (crGeneralMon2 !== appsmith.model.crGeneralMon2) {\n      setCrGeneralMon2(appsmith.model.crGeneralMon2);\n    }\n    if (crAwards !== appsmith.model.crAwards) {\n      setCrAwards(appsmith.model.crAwards);\n    }\n    if (crFinancesTotal !== appsmith.model.crFinancesTotal) {\n      setCrFinancesTotal(appsmith.model.crFinancesTotal);\n    }\n  });\n  return /*#__PURE__*/React.createElement(\"div\", null, crGeneral && crGeneral.length > 0 && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"hr\", null), /*#__PURE__*/React.createElement(\"div\", {\n    class: \"tableTitle\"\n  }, \"\\u0418\\u0442\\u043E\\u0433\\u043E\\u0432\\u044B\\u0435 \\u0440\\u0435\\u0437\\u0443\\u043B\\u044C\\u0442\\u0430\\u0442\\u044B\")), /*#__PURE__*/React.createElement(TableBuilder, {\n    data: crGeneral,\n    headers: [[{\n      header: '',\n      accessor: 'place'\n    }, {\n      header: 'Nickname',\n      accessor: 'nickname'\n    }, {\n      header: 'Bets',\n      accessor: 'final_bets_count'\n    }, {\n      header: 'Days',\n      accessor: 'active_days'\n    }, {\n      header: 'Won',\n      accessor: 'won'\n    }, {\n      header: 'Lost',\n      accessor: 'lost'\n    }, {\n      header: 'Units',\n      accessor: 'units'\n    }, {\n      header: 'ROI',\n      accessor: 'roi'\n    }]]\n  }), crBiggestOdd && crBiggestOdd.length > 0 && /*#__PURE__*/React.createElement(\"hr\", null), /*#__PURE__*/React.createElement(\"div\", {\n    class: \"container\"\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    class: \"winning-streak-table\"\n  }, crWinningStreak && crWinningStreak.length > 0 && /*#__PURE__*/React.createElement(\"div\", {\n    class: \"tableTitle\"\n  }, \"\\u0421\\u0435\\u0440\\u0438\\u044F\"), /*#__PURE__*/React.createElement(TableBuilder, {\n    data: crWinningStreak,\n    headers: [[{\n      header: '',\n      accessor: 'place'\n    }, {\n      header: 'Nickname',\n      accessor: 'nickname'\n    }, {\n      header: 'Avg Odds',\n      accessor: 'strick_avg_odds'\n    }, {\n      header: 'Length',\n      accessor: 'strick_length'\n    }]]\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    class: \"biggest-odd-table\"\n  }, crWinningStreak && crWinningStreak.length > 0 && /*#__PURE__*/React.createElement(\"div\", {\n    class: \"tableTitle\"\n  }, \"\\u0412\\u044B\\u0441\\u0448\\u0438\\u0439 \\u043A\\u043E\\u044D\\u0444\\u0444\\u0438\\u0446\\u0438\\u0435\\u043D\\u0442\"), /*#__PURE__*/React.createElement(TableBuilder, {\n    data: crBiggestOdd,\n    headers: [[{\n      header: '',\n      accessor: 'place'\n    }, {\n      header: 'Nickname',\n      accessor: 'nickname'\n    }, {\n      header: 'Odds',\n      accessor: 'user_pick_value'\n    }]]\n  }))), crGeneralMon1 && crGeneralMon1.length > 0 && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"hr\", null), /*#__PURE__*/React.createElement(\"div\", {\n    class: \"tableTitle\"\n  }, \"\\u0420\\u0435\\u0437\\u0443\\u043B\\u044C\\u0442\\u0430\\u0442\\u044B 1-\\u0433\\u043E \\u043C\\u0435\\u0441\\u044F\\u0446\\u0430\")), /*#__PURE__*/React.createElement(TableBuilder, {\n    data: crGeneralMon1,\n    headers: [[{\n      header: '',\n      accessor: 'place'\n    }, {\n      header: 'Nickname',\n      accessor: 'nickname'\n    }, {\n      header: 'Bets',\n      accessor: 'final_bets_count'\n    }, {\n      header: 'Days',\n      accessor: 'active_days'\n    }, {\n      header: 'Won',\n      accessor: 'won'\n    }, {\n      header: 'Lost',\n      accessor: 'lost'\n    }, {\n      header: 'Units',\n      accessor: 'units'\n    }, {\n      header: 'ROI',\n      accessor: 'roi'\n    }]]\n  }), crGeneralMon2 && crGeneralMon2.length > 0 && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"hr\", null), /*#__PURE__*/React.createElement(\"div\", {\n    class: \"tableTitle\"\n  }, \"\\u0420\\u0435\\u0437\\u0443\\u043B\\u044C\\u0442\\u0430\\u0442\\u044B 2-\\u0433\\u043E \\u043C\\u0435\\u0441\\u044F\\u0446\\u0430\")), /*#__PURE__*/React.createElement(TableBuilder, {\n    data: crGeneralMon2,\n    headers: [[{\n      header: '',\n      accessor: 'place'\n    }, {\n      header: 'Nickname',\n      accessor: 'nickname'\n    }, {\n      header: 'Bets',\n      accessor: 'final_bets_count'\n    }, {\n      header: 'Days',\n      accessor: 'active_days'\n    }, {\n      header: 'Won',\n      accessor: 'won'\n    }, {\n      header: 'Lost',\n      accessor: 'lost'\n    }, {\n      header: 'Units',\n      accessor: 'units'\n    }, {\n      header: 'ROI',\n      accessor: 'roi'\n    }]]\n  }), crAwards && crAwards.length > 0 && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"hr\", null), /*#__PURE__*/React.createElement(\"div\", {\n    class: \"tableTitle\"\n  }, \"\\u041F\\u0440\\u0438\\u0437\\u043E\\u0432\\u044B\\u0435\")), /*#__PURE__*/React.createElement(TableBuilder, {\n    data: crAwards,\n    headers: [[{\n      header: '',\n      accessor: 'place'\n    }, {\n      header: 'Nickname',\n      accessor: 'nickname'\n    }, {\n      header: 'Value',\n      accessor: 'action_value'\n    }, {\n      header: 'Description',\n      accessor: 'description_rus'\n    }]]\n  }), crFinancesTotal && crFinancesTotal.length > 0 && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"hr\", null), /*#__PURE__*/React.createElement(\"div\", {\n    class: \"tableTitle\"\n  }, \"\\u0418\\u0442\\u043E\\u0433\\u0438 (\\u043F\\u0440\\u0438\\u0437\\u043E\\u0432\\u044B\\u0435 \\u043C\\u0438\\u043D\\u0443\\u0441 \\u0432\\u0437\\u043D\\u043E\\u0441\\u044B)\")), /*#__PURE__*/React.createElement(TableBuilder, {\n    data: crFinancesTotal,\n    headers: [[{\n      header: '',\n      accessor: 'place'\n    }, {\n      header: 'Nickname',\n      accessor: 'nickname'\n    }, {\n      header: 'Award',\n      accessor: 'prize'\n    }, {\n      header: 'Fee',\n      accessor: 'participation_fee'\n    }, {\n      header: 'Total',\n      accessor: 'total'\n    }]]\n  }));\n}\nappsmith.onReady(() => {\n  /*\n   * This handler function will get called when parent application is ready.\n   * Initialize your component here\n   * more info - https://docs.appsmith.com/reference/widgets/custom#onready\n   */\n  reactDom.render( /*#__PURE__*/React.createElement(App, null), document.getElementById(\"root\"));\n});",
        "html": "<!-- no need to write html, head, body tags, it is handled by the widget -->\n<div id=\"root\"><\/div>\n"
    },
    "isCanvas": false,
    "iconSVG": "https://appcdn.appsmith.com/static/media/icon.ff37253a5ce2f5284c42ede26ce165f9.svg",
    "displayName": "Custom",
    "topRow": 8,
    "searchTags": ["external"],
    "bottomRow": 231,
    "parentRowSpace": 10,
    "type": "CUSTOM_WIDGET",
    "hideCard": false,
    "mobileRightColumn": 34,
    "shouldScrollContents": true,
    "dynamicTriggerPathList": [{"key": "onResetClick"}],
    "parentColumnSpace": 14.234375,
    "dynamicBindingPathList": [
        {"key": "theme"},
        {"key": "boxShadow"},
        {"key": "defaultModel"}
    ],
    "leftColumn": 0,
    "defaultModel": "{{utils.customWidgetData()}}",
    "borderWidth": "0",
    "theme": "{{appsmith.theme}}",
    "onResetClick": "{{showAlert('Successfully reset!!', '');}}",
    "events": ["onResetClick"],
    "key": "krvw8yv6jy",
    "backgroundColor": "#FFFFFF",
    "isDeprecated": false,
    "rightColumn": 64,
    "thumbnailSVG": "https://appcdn.appsmith.com/static/media/thumbnail.a7d7cde44fad9a0d4d490def43560a78.svg",
    "dynamicHeight": "FIXED",
    "isSearchWildcard": true,
    "widgetId": "v2j2lfwpv0",
    "isVisible": true,
    "version": 1,
    "uncompiledSrcDoc": {
        "css": "/* Google fonts - Open Sans */\n@import url(https://fonts.googleapis.com/css?family=Nunito+Sans:400,700);\n\n.app {\n\theight: calc(var(--appsmith-ui-height) * 1px);\n\twidth: calc(var(--appsmith-ui-width) * 1px);\n\tjustify-content: center;\n\tborder-radius: var(--appsmith-theme-borderRadius);\n\tbox-shadow: var(--appsmith-theme-boxShadow);\n}\n\ndiv {\n    color: rgba(255, 255, 255, 0.9);\n}\n\nbody {\n    background: #18181b;\n    font-family: \"Nunito Sans\", sans-serif;\n  }\n\ntable {\n\t\tborder-collapse: collapse;\n    font-weight: bold;\n}\n\ntable, th, td {\n    border: 0.5px solid black;\n}\n\nth {\n    background-color: #726f69;\n    height: 35px;\n    font-size: 12px;\n\t\tline-height: 1.2\n  }\n\ntd {\n    background: #3a3936;\n    font-size: 11px;\n    height: 25px;\n\t\tline-height: 1.2\n  }\n\ntd:not(.place-cellData,  .is_active-cellData) {\n\tpadding-left: 5px;\n}\n\na {\n    color: rgba(255, 255, 255, 0.9);\n}\n\na:hover {\n    color: rgba(209, 212, 199, 0.9); \n}\n\n.tableTitle {\n\ttext-align: center;\n\tfont-size: 12px;\n\tfont-weight: bold;\n\tpadding-top: 5px;\n\tpadding-bottom: 10px;\n}\n\n.winning-strick {\n    float: left;\n    padding-right: 30px;\n}\n\n.th-nickname {\n    min-width: 50px;\n}\n\n.th-contest {\n    width: 140px;\n}\n\n.biggest-odds {\n    width: 220px;\n}\n\n.place-cellData,  .is_active-cellData {\n    min-width: 15px;\n\t\ttext-align: center;\n}\n\n.five-contests-points {\n    max-width: 40px;\n  }\n\n.container {\n\tdisplay: flex;\n}\n\n.winning-streak-table {\n\twidth: 60%;\n}\n\n.biggest-odd-table {\n\twidth: 38%;\n\tmargin-left: auto;\n}\n\n.strick_avg_odds {\n\tmax-width: 40px\n}\n",
        "js": "import React, {useState} from 'https://cdn.jsdelivr.net/npm/react@18.2.0/+esm';\nimport reactDom from 'https://cdn.jsdelivr.net/npm/react-dom@18.2.0/+esm';\n\nclass TableBuilder extends React.Component {\n\t\n\t renderTableHeaders(headers, data) {\n\t\t\n\t\t// Do not render headers if table has no data\n\t\tif (!data || !Array.isArray(data) || data.length === 0) {\n      return null;\n    }\n\t\t \n    return headers.map((headerRow, rowIndex) => (\n      <tr key={rowIndex}>\n        {headerRow.map((headerItem, colIndex) => {\n          const { header, accessor, rowspan = 1, colspan = 1 } = headerItem;\n          if (colspan > 1) {\n            return (\n              <th key={colIndex} colSpan={colspan} class={accessor}>\n                {header}\n              <\/th>\n            );\n          } else {\n            return (\n              <th key={colIndex} rowSpan={rowspan} class={accessor}>\n                {header}\n              <\/th>\n            );\n          }\n        })}\n      <\/tr>\n    ));\n  }\n\t\n\trenderTableRows(data) {\n\t\t\n\t\t// Do not render rows if table has no data\n\t\tif (!data || !Array.isArray(data) || data.length === 0) {\n      return null;\n    }\n\t\t\n\t\t// Saving field names to use them as class names for table fields\n\t\tconst keys = Object.keys(data[0]);\n\t\tconst classNames = keys.map(key => key + \"-cellData\");\n\t\t\n    return data.map((row, index) => (\n      <tr key={index}>\n        {Object.values(row).map((cell, cellIndex) => (\n          <td key={cellIndex} class={classNames[cellIndex]} dangerouslySetInnerHTML={{ __html: cell }}><\/td>\n        ))}\n      <\/tr>\n    ));\n  }\n\n  render() {\n    const { data } = this.props;\n\t\tconst { headers } = this.props;\n    return (\n      <table style={{ width: '100%' }}>\n        <thead>\n\t\t\t\t\t {this.renderTableHeaders(headers, data)}\n        <\/thead>\n        <tbody>\n          {this.renderTableRows(data)}\n        <\/tbody>\n      <\/table>\n    );\n  }\n}\n\nexport default TableBuilder;\n\nfunction App() {\n\t\n\tconst [crGeneral, setCrGeneral] = useState(appsmith.model.crGeneral);\n\tconst [crWinningStreak, setCrWinningStreak] = useState(appsmith.model.crWinningStreak);\n\tconst [crBiggestOdd, setCrBiggestOdd] = useState(appsmith.model.crBiggestOdd);\n\tconst [crGeneralMon1, setCrGeneralMon1] = useState(appsmith.model.crGeneralMon1);\n\tconst [crGeneralMon2, setCrGeneralMon2] = useState(appsmith.model.crGeneralMon2);\n\tconst [crAwards, setCrAwards] = useState(appsmith.model.crGeneralMon2);\n\tconst [crFinancesTotal, setCrFinancesTotal] = useState(appsmith.model.crFinancesTotal);\n\t\n\tappsmith.onModelChange(() => {\n\t\t\n\t\tif(crGeneral !== appsmith.model.crGeneral) {\n\t\t\tsetCrGeneral(appsmith.model.crGeneral);\n\t\t}\n\t\t\n\t\tif(crWinningStreak !== appsmith.model.crWinningStreak) {\n\t\t\tsetCrWinningStreak(appsmith.model.crWinningStreak);\n\t\t}\n\t\t\n\t\tif(crBiggestOdd !== appsmith.model.crBiggestOdd) {\n\t\t\tsetCrBiggestOdd(appsmith.model.crBiggestOdd);\n\t\t}\n\t\t\n\t\tif(crGeneralMon1 !== appsmith.model.crGeneralMon1) {\n\t\t\tsetCrGeneralMon1(appsmith.model.crGeneralMon1);\n\t\t}\n\t\t\n\t\tif(crGeneralMon2 !== appsmith.model.crGeneralMon2) {\n\t\t\tsetCrGeneralMon2(appsmith.model.crGeneralMon2);\n\t\t}\n\t\t\n\t\tif(crAwards !== appsmith.model.crAwards) {\n\t\t\tsetCrAwards(appsmith.model.crAwards);\n\t\t}\n\t\t\n\t\tif(crFinancesTotal !== appsmith.model.crFinancesTotal) {\n\t\t\tsetCrFinancesTotal(appsmith.model.crFinancesTotal);\n\t\t}\n\t\t\n\t});\n\t\n  return (\n    <div>\n\t\t\t{crGeneral && crGeneral.length > 0 && (\n\t\t\t \t<>\t\t\t\n\t\t\t \t\t\t<hr><\/hr>\n            <div class='tableTitle'>Итоговые результаты<\/div>\n\t\t\t \t<\/>\n            )}\n\t\t\t<TableBuilder \n\t\t\t\tdata={crGeneral} \n\t\t\t\theaders={[\n\t\t\t\t\t[\n\t\t\t\t\t\t{ header: '', accessor: 'place' },\n\t\t\t\t\t\t{ header: 'Nickname', accessor: 'nickname'},\n\t\t\t\t\t\t{ header: 'Bets', accessor: 'final_bets_count' },\n\t\t\t\t\t\t{ header: 'Days', accessor: 'active_days'},\n\t\t\t\t\t\t{ header: 'Won', accessor: 'won'},\n\t\t\t\t\t\t{ header: 'Lost', accessor: 'lost'},\n\t\t\t\t\t\t{ header: 'Units', accessor: 'units'},\n\t\t\t\t\t\t{ header: 'ROI', accessor: 'roi'}\n\t\t\t\t\t]\n\t\t\t\t]}\n\t\t\t/>\n\t\t\t{crBiggestOdd && crBiggestOdd.length > 0 && (<hr><\/hr> )}\n\t\t\t<div class='container'>\n\t\t\t\t<div class='winning-streak-table'>\n\t\t\t\t\t{crWinningStreak && crWinningStreak.length > 0 && (\n\t\t\t \t\t\t<div class='tableTitle'>Серия<\/div> \n\t\t\t \t\t)}\n\t\t\t\t\t<TableBuilder \n\t\t\t\t\t\tdata={crWinningStreak} \n\t\t\t\t\t\theaders={[\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t{ header: '', accessor: 'place' },\n\t\t\t\t\t\t\t\t{ header: 'Nickname', accessor: 'nickname'},\n\t\t\t\t\t\t\t\t{ header: 'Avg Odds', accessor: 'strick_avg_odds'},\n\t\t\t\t\t\t\t\t{ header: 'Length', accessor: 'strick_length'}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]}\n\t\t\t\t\t/>\n\t\t\t\t<\/div>\n\t\t\t\t<div class='biggest-odd-table'>\n\t\t\t\t\t{crWinningStreak && crWinningStreak.length > 0 && (\n\t\t\t \t\t\t<div class='tableTitle'>Высший коэффициент<\/div> \n\t\t\t \t\t)}\n\t\t\t\t\t<TableBuilder \n\t\t\t\t\t\tdata={crBiggestOdd} \n\t\t\t\t\t\theaders={[\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t{ header: '', accessor: 'place' },\n\t\t\t\t\t\t\t\t{ header: 'Nickname', accessor: 'nickname'},\n\t\t\t\t\t\t\t\t{ header: 'Odds', accessor: 'user_pick_value' }\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]}\n\t\t\t\t\t/>\n\t\t\t\t<\/div>\n\t\t\t<\/div>\n\t\t{crGeneralMon1 && crGeneralMon1.length > 0 && (\n\t\t\t \t<>\t\t\t\n\t\t\t \t\t\t<hr><\/hr>\n            <div class='tableTitle'>Результаты 1-го месяца<\/div>\n\t\t\t \t<\/>\n            )}\n\t\t\t<TableBuilder \n\t\t\t\tdata={crGeneralMon1} \n\t\t\t\theaders={[\n\t\t\t\t\t[\n\t\t\t\t\t\t{ header: '', accessor: 'place' },\n\t\t\t\t\t\t{ header: 'Nickname', accessor: 'nickname'},\n\t\t\t\t\t\t{ header: 'Bets', accessor: 'final_bets_count' },\n\t\t\t\t\t\t{ header: 'Days', accessor: 'active_days'},\n\t\t\t\t\t\t{ header: 'Won', accessor: 'won'},\n\t\t\t\t\t\t{ header: 'Lost', accessor: 'lost'},\n\t\t\t\t\t\t{ header: 'Units', accessor: 'units'},\n\t\t\t\t\t\t{ header: 'ROI', accessor: 'roi'}\n\t\t\t\t\t]\n\t\t\t\t]}\n\t\t\t/>\n\t\t\t{crGeneralMon2 && crGeneralMon2.length > 0 && (\n\t\t\t \t<>\t\t\t\n\t\t\t \t\t\t<hr><\/hr>\n            <div class='tableTitle'>Результаты 2-го месяца<\/div>\n\t\t\t \t<\/>\n            )}\n\t\t\t<TableBuilder \n\t\t\t\tdata={crGeneralMon2} \n\t\t\t\theaders={[\n\t\t\t\t\t[\n\t\t\t\t\t\t{ header: '', accessor: 'place' },\n\t\t\t\t\t\t{ header: 'Nickname', accessor: 'nickname'},\n\t\t\t\t\t\t{ header: 'Bets', accessor: 'final_bets_count' },\n\t\t\t\t\t\t{ header: 'Days', accessor: 'active_days'},\n\t\t\t\t\t\t{ header: 'Won', accessor: 'won'},\n\t\t\t\t\t\t{ header: 'Lost', accessor: 'lost'},\n\t\t\t\t\t\t{ header: 'Units', accessor: 'units'},\n\t\t\t\t\t\t{ header: 'ROI', accessor: 'roi'}\n\t\t\t\t\t]\n\t\t\t\t]}\n\t\t\t/>\n\t\t\t{crAwards && crAwards.length > 0 && (\n\t\t\t \t<>\t\t\t\n\t\t\t \t\t\t<hr><\/hr>\n            <div class='tableTitle'>Призовые<\/div>\n\t\t\t \t<\/>\n            )}\n\t\t\t<TableBuilder \n\t\t\t\tdata={crAwards} \n\t\t\t\theaders={[\n\t\t\t\t\t[\n\t\t\t\t\t\t{ header: '', accessor: 'place' },\n\t\t\t\t\t\t{ header: 'Nickname', accessor: 'nickname'},\n\t\t\t\t\t\t{ header: 'Value', accessor: 'action_value' },\n\t\t\t\t\t\t{ header: 'Description', accessor: 'description_rus'}\n\t\t\t\t\t]\n\t\t\t\t]}\n\t\t\t/>\n\t\t\t{crFinancesTotal && crFinancesTotal.length > 0 && (\n\t\t\t \t<>\t\t\t\n\t\t\t \t\t\t<hr><\/hr>\n            <div class='tableTitle'>Итоги (призовые минус взносы)<\/div>\n\t\t\t \t<\/>\n            )}\n\t\t\t<TableBuilder \n\t\t\t\tdata={crFinancesTotal} \n\t\t\t\theaders={[\n\t\t\t\t\t[\n\t\t\t\t\t\t{ header: '', accessor: 'place' },\n\t\t\t\t\t\t{ header: 'Nickname', accessor: 'nickname'},\n\t\t\t\t\t\t{ header: 'Award', accessor: 'prize' },\n\t\t\t\t\t\t{ header: 'Fee', accessor: 'participation_fee'},\n\t\t\t\t\t\t{ header: 'Total', accessor: 'total'}\n\t\t\t\t\t]\n\t\t\t\t]}\n\t\t\t/>\n    <\/div>\n  );\n}\n\nappsmith.onReady(() => {\n  /*\n   * This handler function will get called when parent application is ready.\n   * Initialize your component here\n   * more info - https://docs.appsmith.com/reference/widgets/custom#onready\n   */\n  reactDom.render(<App />, document.getElementById(\"root\"));\n});\n",
        "html": "<!-- no need to write html, head, body tags, it is handled by the widget -->\n<div id=\"root\"><\/div>\n"
    },
    "parentId": "0",
    "tags": ["Display"],
    "isLoading": false,
    "renderMode": "CANVAS",
    "mobileTopRow": 289,
    "borderRadius": "0.375rem",
    "mobileLeftColumn": 11,
    "maxDynamicHeight": 9000,
    "minDynamicHeight": 4
}