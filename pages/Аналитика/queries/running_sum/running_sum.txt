SELECT 
	row_number() over (partition by un.nickname order by
    	psr.initial_date_scheduled asc, psr.date_predicted asc) AS `index`
	, SUM(psr.actual_unit_outcome) OVER (partition by un.nickname
		ORDER BY psr.initial_date_scheduled asc, psr.date_predicted asc
	) AS running_sum
from prediction_seas_refined psr 
	join user_nickname un on un.user_id = psr.user_id
	join contest c on c.id = psr.seasonal_contest_id
where 1=1 
	and psr.count_in_contest = 1
 		and psr.count_lost = 0
 		and psr.`result` = psr.actual_result
		and psr.result != 'not-played'
 		and psr.user_id = '{{Select_participant.selectedOptionValue}}'
		and ({{MultiSelect_contest.selectedOptionValues.length === 0}} 
			OR psr.seasonal_contest_id in ({{utils.commaSeparate(MultiSelect_contest.selectedOptionValues)}}))
		and ({{MultiSelect_sports.selectedOptionValues.length === 0}} 
			OR psr.sport in ({{utils.commaSeparate(MultiSelect_sports.selectedOptionValues)}}))
		and ({{MultiSelect_markets.selectedOptionValues.length === 0}} 
			OR psr.market in ({{utils.commaSeparate(MultiSelect_markets.selectedOptionValues)}}))
		and ({{Input_min_odds.text === null}} OR psr.user_pick_value >= '{{Input_min_odds.text}}')
		and ({{Input_max_odds.text === null}} OR psr.user_pick_value <= '{{Input_max_odds.text}}')
;